// Этот скрипт не вешаеться ни на один объект в игре но он хранит избранные написанные мною методы и публичные переменные
using UnityEngine;
using System;
using System.Collections.Generic;

public enum MainMenuWins : byte {MainMenu, Store, Profile, Profile_Avatar, Information}				// Перечисление окон главного меню
public enum GameMenuWins : byte {Start, Inventory, Game, Pause, Finish}								// Перечисление окон игры
public enum Mode : byte {Passage, PlayerVsPlayer}													// Режимы игры

public class MyMetodsAndVars : MonoBehaviour 
{
 
//	public List<int> ObjectExpirience[] = new List<int>[5];
}


// Пояснение для массивов списков списков 
// 1)> Первая ступень массив номеру элемента соответствует номер профиля
// 2)> Вторая ступень список означающий номер элемента ссылки в списке ObjectNombers а по нему мы уже выходим на объект в массиве ObjectsStore
// 3)> Третяя ступень состояния материалов/улучшений этого объекта в зависимости от того что за массив списков списков

[Serializable]										
public class SaveProfiles							// Класс для сохранения в него всей информации разом						
{
//---------------------------------------------------------------------------------------------------------Простые данные профилей-------------------------------------------------------------------------------------------------------------------------------
	public decimal HashTab = 0;						// Контрольная сумма
	public int SaveNomber = 0;						// Номер сохранения
	public byte ActiveProfile;						// Номер активного профилья - тот профиль который мы выбрали и за который играем
	public string[] NamesProfiles = new string[5];	// Массив имён профилей игроков(Номер в массиве означает номер профиля)
	public string[] PlayersAvs = new string[5];		// Массив адресов аватарок для профилей игроков (Номер в массиве означает номер профиля)
	public int[] Credits = new int[5];				// В этом массиве храняться "Кредиты" или деньги всех профилей (Номер в массиве означает номер профиля)
	public byte[] Progress = new byte[5];			// Массив номеров следующего уровня который доступен для прохождения для каждого профиля (Номер в массиве означает номер профиля)
	public byte[] PlayedLevels = new byte[5];		// Последний сыгранный уровень для данного профиля
	public bool[] RightSide = new bool[5];			// Массив сторон на которых предпочитают играть игроки
	public bool[] AlienStyles = new bool[5];		// Массив предпочитаемых игроком стилей цифр. Земной или инопланетный (true означает инопланетный)
	public byte[] Difficulty = new byte[5];			// Уровни сложности выбранные для каждого игрока 0 или 1 Детский или Нормальный

//-----------------------------------------------------------------------Сохранения закрытых, открытых и купленных элементов магазина для каждого профиля--------------------------------------------------------------------------------------------------------

	public short[,] ActiveObjects = new short[5,4];							// Массив последние 4 выбранных активных объекта для каждого профиля. Бита, шайба, стол и скабокс. (Для каждого профиля)
	public byte[][] ActiveMats = new byte[5][];								// Массив массивов номеров активных материалов для объектов в массиве ObjectsStore
	public byte[][] ActiveImprs = new byte[5][];							// Массив массивов номеров активных улучшений для объектов в массиве ObjectsStore
	public int[][] ObjectsExpirience = new int[5][];						// Массив массивов опыта объектов в массиве Objects Store 
	public char[][] ObjectsStates = new char[5][];							// Массив массивов состояний объектов для массива ObjectsStore (Открыт - O) (Куплен - B) 
	public char[][] SkyboxesStates = new char[5][];							// Массив массивов состояний скайбоксов для массива SkyboxMats (Открыт - O) (Куплен - B)
	public List<char>[][] StatesMaterials = new List<char>[5][];			// В этом массиве массивов храняться состояния материалов для выделенной ячейки (C - Закрыт),(O - Открыт),(B - Куплен)
	public List<char>[][] StatesImprovements = new List<char>[5][];			// В этом массиве списков храняться состояния улучшений для выделенной ячейки (C - Закрыт),(O - Открыт),(B - Куплен)
}


